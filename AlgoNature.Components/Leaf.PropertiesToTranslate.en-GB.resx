<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AbsoluteCenterPointLocation" xml:space="preserve">
    <value>Absolute placement of central point</value>
  </data>
  <data name="AccurateLogarithmicSpiral" xml:space="preserve">
    <value>Accurate logarithmic spiral</value>
  </data>
  <data name="AlreadyGrownState" xml:space="preserve">
    <value>Phase of growth</value>
  </data>
  <data name="BackgroundColor" xml:space="preserve">
    <value>Background colour</value>
  </data>
  <data name="BeginingAnglePhase" xml:space="preserve">
    <value>Angle phase of spiral's begining (sector)</value>
  </data>
  <data name="BorderColor" xml:space="preserve">
    <value>Edge colour</value>
  </data>
  <data name="BorderPen" xml:space="preserve">
    <value>Edge pen</value>
  </data>
  <data name="BranchGrowthType" xml:space="preserve">
    <value>Branch growth type</value>
  </data>
  <data name="BranchLength" xml:space="preserve">
    <value>Branch length</value>
  </data>
  <data name="BranchPen" xml:space="preserve">
    <value>Branch pen</value>
  </data>
  <data name="CenterPoint" xml:space="preserve">
    <value>Central point</value>
  </data>
  <data name="CenterPointParentAbsoluteLocation" xml:space="preserve">
    <value>Absolute placement of central point in parent</value>
  </data>
  <data name="CentralVeinPixelThickness" xml:space="preserve">
    <value>Central vein thickness in pixels</value>
  </data>
  <data name="ContinueAfterInvertedCurving" xml:space="preserve">
    <value>Continue straight after inverted curving</value>
  </data>
  <data name="CurrentFillBrush" xml:space="preserve">
    <value>Current fill brush</value>
  </data>
  <data name="CurrentFillColor" xml:space="preserve">
    <value>Current fill colour</value>
  </data>
  <data name="CurrentTimeAfterLastGrowth" xml:space="preserve">
    <value>Current time after last growth</value>
  </data>
  <data name="CurveBehindCenterPoint" xml:space="preserve">
    <value>Curve behind centre point</value>
  </data>
  <data name="DeathTimeSpanFromAveragePart" xml:space="preserve">
    <value>Partial average deviation from the length of life</value>
  </data>
  <data name="DivideAngle" xml:space="preserve">
    <value>Angles division (n parameter)</value>
  </data>
  <data name="Fill" xml:space="preserve">
    <value>Fil</value>
  </data>
  <data name="GrowFrom_CenterPoint" xml:space="preserve">
    <value>Grow from leaf's central point</value>
  </data>
  <data name="HasBranch" xml:space="preserve">
    <value>Has branch</value>
  </data>
  <data name="IdealArea" xml:space="preserve">
    <value>Ideal area (in square pixels)</value>
  </data>
  <data name="IdealTangentAngleLeft" xml:space="preserve">
    <value>Ideal left tangent angle</value>
  </data>
  <data name="IdealTangentAngleRight" xml:space="preserve">
    <value>Ideal right tangent angle</value>
  </data>
  <data name="InvertedBegining" xml:space="preserve">
    <value>Inverted begining</value>
  </data>
  <data name="InvertedCurving" xml:space="preserve">
    <value>Inverted curving</value>
  </data>
  <data name="InvertedCurvingCenterAngle" xml:space="preserve">
    <value>Angle of inverted curving centre</value>
  </data>
  <data name="InvertedCurvingSpan" xml:space="preserve">
    <value>Inverted curving span angle</value>
  </data>
  <data name="InvertedLeaf" xml:space="preserve">
    <value>Inverted leaf</value>
  </data>
  <data name="IsBilaterallySymetric" xml:space="preserve">
    <value>Bilaterally symetric</value>
  </data>
  <data name="IsDead" xml:space="preserve">
    <value>Dead</value>
  </data>
  <data name="LeafGrowthType" xml:space="preserve">
    <value>Leaf's growth type</value>
  </data>
  <data name="LeftCurveTension" xml:space="preserve">
    <value>Left curve tension</value>
  </data>
  <data name="LeftDivideAngle" xml:space="preserve">
    <value>Angles division (n parameter) of left side</value>
  </data>
  <data name="LifeTimer" xml:space="preserve">
    <value>Life timer</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="NameTranslated" xml:space="preserve">
    <value>Leaf</value>
  </data>
  <data name="OneLengthPixels" xml:space="preserve">
    <value>Unit length in pixels</value>
  </data>
  <data name="OnePartGrowOneLengthPixels" xml:space="preserve">
    <value>Unit length increment after one step growth in pixels</value>
  </data>
  <data name="OnePartPossitinon" xml:space="preserve">
    <value>Angle phase of unit length of spiral's radius</value>
  </data>
  <data name="PropertiesEditingMode" xml:space="preserve">
    <value>Properties editing mode (cancels redrawing)</value>
  </data>
  <data name="RightCurveTension" xml:space="preserve">
    <value>Right curve tension</value>
  </data>
  <data name="RightDivideAngle" xml:space="preserve">
    <value>Angles division (n parameter) of right side</value>
  </data>
  <data name="RotationAngleRad" xml:space="preserve">
    <value>Leaf's rotation angle towards vertical vector (0;1) in radians</value>
  </data>
  <data name="SmoothTop" xml:space="preserve">
    <value>Smooth top</value>
  </data>
  <data name="TimeToAverageDieAfter" xml:space="preserve">
    <value>Average length of life</value>
  </data>
  <data name="TimeToGrowOneStepAfter" xml:space="preserve">
    <value>One step growth time</value>
  </data>
  <data name="Veins" xml:space="preserve">
    <value>Veins</value>
  </data>
  <data name="VeinsBorderReachPart" xml:space="preserve">
    <value>Veins' border reach part</value>
  </data>
  <data name="VeinsColor" xml:space="preserve">
    <value>Veins' colour</value>
  </data>
  <data name="VeinsFractalisation" xml:space="preserve">
    <value>Veins' fractalisation</value>
  </data>
  <data name="VitalFillBrush" xml:space="preserve">
    <value>Vital fill brush</value>
  </data>
  <data name="VitalFillColor" xml:space="preserve">
    <value>Vital fill colour</value>
  </data>
  <data name="ZeroStateBranchOneLengthPixels" xml:space="preserve">
    <value>Unit length of branch's zero phase of the growth in pixels</value>
  </data>
  <data name="ZeroStateOneLengthPixels" xml:space="preserve">
    <value>Unit length of zero phase of the growth in pixels</value>
  </data>
</root>